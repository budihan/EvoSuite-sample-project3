/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 17 20:05:06 GMT 2022
 */

package com.zetcode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zetcode.Board;
import java.awt.Dialog;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import javax.swing.DebugGraphics;
import javax.swing.KeyStroke;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Board_ESTest extends Board_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom(2974);
      Board board0 = new Board();
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(3, 2974, false);
      ActionEvent actionEvent0 = new ActionEvent(keyStroke0, (-306), "I!U", 1122);
      board0.actionPerformed(actionEvent0);
      assertTrue(board0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Board board0 = new Board();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        board0.paintComponent(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Board board0 = new Board();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.TOOLKIT_MODAL;
      Board board1 = new Board();
      ActionEvent actionEvent0 = new ActionEvent(dialog_ModalityType0, (-692), "RAFv~S}vz?|bW1", (-692));
      board1.actionPerformed(actionEvent0);
      assertTrue(board1.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Board board0 = new Board();
      board0.actionPerformed((ActionEvent) null);
      assertTrue(board0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Board board0 = new Board();
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0);
      board0.paintComponent(debugGraphics0);
      assertFalse(board0.isFocusTraversalPolicyProvider());
  }
}
